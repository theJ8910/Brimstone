# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=release_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Iinclude
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release_x64)
TARGETDIR = lib
TARGET = $(TARGETDIR)/libBrimstone_x86-64.a
OBJDIR = obj/x64/release/Brimstone
DEFINES += -DBS_BUILD_OPENGL -DBS_BUILD_LINUX -DBS_BUILD_64BIT
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -Wall -Wextra -pthread -Wno-unknown-pragmas
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -Wall -Wextra -std=c++20 -pthread -Wno-unknown-pragmas
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -pthread

else ifeq ($(config),release_x32)
TARGETDIR = lib
TARGET = $(TARGETDIR)/libBrimstone_x86.a
OBJDIR = obj/x32/release/Brimstone
DEFINES += -DBS_BUILD_OPENGL -DBS_BUILD_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -Wall -Wextra -pthread -Wno-unknown-pragmas
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -Wall -Wextra -std=c++20 -pthread -Wno-unknown-pragmas
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -s -pthread

else ifeq ($(config),debug_x64)
TARGETDIR = lib
TARGET = $(TARGETDIR)/libBrimstone_x86-64d.a
OBJDIR = obj/x64/debug/Brimstone
DEFINES += -DBS_BUILD_OPENGL -DBS_BUILD_DEBUG -DBS_ZERO -DBS_CHECK_NULLPTR -DBS_CHECK_SIZE -DBS_CHECK_INDEX -DBS_CHECK_DIVBYZERO -DBS_CHECK_DOMAIN -DBS_BUILD_LINUX -DBS_BUILD_64BIT
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wall -Wextra -pthread -Wno-unknown-pragmas
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wall -Wextra -std=c++20 -pthread -Wno-unknown-pragmas
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread

else ifeq ($(config),debug_x32)
TARGETDIR = lib
TARGET = $(TARGETDIR)/libBrimstone_x86d.a
OBJDIR = obj/x32/debug/Brimstone
DEFINES += -DBS_BUILD_OPENGL -DBS_BUILD_DEBUG -DBS_ZERO -DBS_CHECK_NULLPTR -DBS_CHECK_SIZE -DBS_CHECK_INDEX -DBS_CHECK_DIVBYZERO -DBS_CHECK_DOMAIN -DBS_BUILD_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g -Wall -Wextra -pthread -Wno-unknown-pragmas
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -Wall -Wextra -std=c++20 -pthread -Wno-unknown-pragmas
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -m32 -pthread

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/BaseWindowImpl.o
GENERATED += $(OBJDIR)/Enums.o
GENERATED += $(OBJDIR)/Events.o
GENERATED += $(OBJDIR)/Exception.o
GENERATED += $(OBJDIR)/GLGraphicsImpl.o
GENERATED += $(OBJDIR)/GLProgram.o
GENERATED += $(OBJDIR)/GLSampler.o
GENERATED += $(OBJDIR)/GLShader.o
GENERATED += $(OBJDIR)/GLTexture.o
GENERATED += $(OBJDIR)/GLVertexBuffer.o
GENERATED += $(OBJDIR)/Graphics.o
GENERATED += $(OBJDIR)/Image.o
GENERATED += $(OBJDIR)/Key.o
GENERATED += $(OBJDIR)/LinuxGLContext.o
GENERATED += $(OBJDIR)/LinuxThreadLocal.o
GENERATED += $(OBJDIR)/Logger.o
GENERATED += $(OBJDIR)/LuaInstance.o
GENERATED += $(OBJDIR)/Math.o
GENERATED += $(OBJDIR)/Misc.o
GENERATED += $(OBJDIR)/Misc1.o
GENERATED += $(OBJDIR)/MouseButton.o
GENERATED += $(OBJDIR)/Stopwatch.o
GENERATED += $(OBJDIR)/ThreadLocal.o
GENERATED += $(OBJDIR)/Time.o
GENERATED += $(OBJDIR)/Unicode.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/XColormap.o
GENERATED += $(OBJDIR)/XCursor.o
GENERATED += $(OBJDIR)/XDisplay.o
GENERATED += $(OBJDIR)/XException.o
GENERATED += $(OBJDIR)/XInputContext.o
GENERATED += $(OBJDIR)/XInputMethod.o
GENERATED += $(OBJDIR)/XPixmap.o
GENERATED += $(OBJDIR)/XShared.o
GENERATED += $(OBJDIR)/XVisualInfo.o
GENERATED += $(OBJDIR)/XWindow.o
OBJECTS += $(OBJDIR)/BaseWindowImpl.o
OBJECTS += $(OBJDIR)/Enums.o
OBJECTS += $(OBJDIR)/Events.o
OBJECTS += $(OBJDIR)/Exception.o
OBJECTS += $(OBJDIR)/GLGraphicsImpl.o
OBJECTS += $(OBJDIR)/GLProgram.o
OBJECTS += $(OBJDIR)/GLSampler.o
OBJECTS += $(OBJDIR)/GLShader.o
OBJECTS += $(OBJDIR)/GLTexture.o
OBJECTS += $(OBJDIR)/GLVertexBuffer.o
OBJECTS += $(OBJDIR)/Graphics.o
OBJECTS += $(OBJDIR)/Image.o
OBJECTS += $(OBJDIR)/Key.o
OBJECTS += $(OBJDIR)/LinuxGLContext.o
OBJECTS += $(OBJDIR)/LinuxThreadLocal.o
OBJECTS += $(OBJDIR)/Logger.o
OBJECTS += $(OBJDIR)/LuaInstance.o
OBJECTS += $(OBJDIR)/Math.o
OBJECTS += $(OBJDIR)/Misc.o
OBJECTS += $(OBJDIR)/Misc1.o
OBJECTS += $(OBJDIR)/MouseButton.o
OBJECTS += $(OBJDIR)/Stopwatch.o
OBJECTS += $(OBJDIR)/ThreadLocal.o
OBJECTS += $(OBJDIR)/Time.o
OBJECTS += $(OBJDIR)/Unicode.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/XColormap.o
OBJECTS += $(OBJDIR)/XCursor.o
OBJECTS += $(OBJDIR)/XDisplay.o
OBJECTS += $(OBJDIR)/XException.o
OBJECTS += $(OBJDIR)/XInputContext.o
OBJECTS += $(OBJDIR)/XInputMethod.o
OBJECTS += $(OBJDIR)/XPixmap.o
OBJECTS += $(OBJDIR)/XShared.o
OBJECTS += $(OBJDIR)/XVisualInfo.o
OBJECTS += $(OBJDIR)/XWindow.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Brimstone
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Brimstone
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Exception.o: src/brimstone/Exception.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Graphics.o: src/brimstone/Graphics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Image.o: src/brimstone/Image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Logger.o: src/brimstone/Logger.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LuaInstance.o: src/brimstone/LuaInstance.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Stopwatch.o: src/brimstone/Stopwatch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Time.o: src/brimstone/Time.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/brimstone/Window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Enums.o: src/brimstone/graphics/Enums.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Key.o: src/brimstone/input/Key.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MouseButton.o: src/brimstone/input/MouseButton.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxThreadLocal.o: src/brimstone/linux/LinuxThreadLocal.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxGLContext.o: src/brimstone/linux/opengl/LinuxGLContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Misc.o: src/brimstone/linux/util/Misc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XColormap.o: src/brimstone/linux/x11/XColormap.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XCursor.o: src/brimstone/linux/x11/XCursor.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XDisplay.o: src/brimstone/linux/x11/XDisplay.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XException.o: src/brimstone/linux/x11/XException.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XInputContext.o: src/brimstone/linux/x11/XInputContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XInputMethod.o: src/brimstone/linux/x11/XInputMethod.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XPixmap.o: src/brimstone/linux/x11/XPixmap.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XShared.o: src/brimstone/linux/x11/XShared.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XVisualInfo.o: src/brimstone/linux/x11/XVisualInfo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/XWindow.o: src/brimstone/linux/x11/XWindow.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLGraphicsImpl.o: src/brimstone/opengl/GLGraphicsImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLProgram.o: src/brimstone/opengl/GLProgram.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLSampler.o: src/brimstone/opengl/GLSampler.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLShader.o: src/brimstone/opengl/GLShader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLTexture.o: src/brimstone/opengl/GLTexture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLVertexBuffer.o: src/brimstone/opengl/GLVertexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Events.o: src/brimstone/ui/Events.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Math.o: src/brimstone/util/Math.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Misc1.o: src/brimstone/util/Misc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ThreadLocal.o: src/brimstone/util/ThreadLocal.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Unicode.o: src/brimstone/util/Unicode.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BaseWindowImpl.o: src/brimstone/window/BaseWindowImpl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif